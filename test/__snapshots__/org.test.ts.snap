// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "IPAMAdministratorProviderboto3Layer1B6FCCE6": Object {
      "Properties": Object {
        "CompatibleRuntimes": Array [
          "python3.9",
        ],
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "ca6ae8f882accddb008be9ed1b83f11112822b59efb10fe562c9443d2447df47.zip",
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "IPAMAdministratorProviderhandlerD22F93F1": Object {
      "DependsOn": Array [
        "IPAMAdministratorProviderroleBA494714",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "8648a71cdeca84a32e80550a790e08a6f92416cb8203d070067be77b6e984982.zip",
        },
        "Handler": "index.on_event",
        "Layers": Array [
          Object {
            "Ref": "IPAMAdministratorProviderboto3Layer1B6FCCE6",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "IPAMAdministratorProviderroleBA494714",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IPAMAdministratorProviderpolicy661939F1": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:EnableIpamOrganizationAdminAccount",
                "organizations:EnableAwsServiceAccess",
                "organizations:RegisterDelegatedAdministator",
                "iam:CreateServiceLinkedRole",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "IPAMAdministratorProviderproviderframeworkonEvent71C8849F": Object {
      "DependsOn": Array [
        "IPAMAdministratorProviderproviderframeworkonEventServiceRoleDefaultPolicyF2740871",
        "IPAMAdministratorProviderproviderframeworkonEventServiceRole89DD5A78",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "598fb6cff8e638be6d00a6a4d728d795cc8f563ff24122bb1ab518c1530e24d8.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (TestStack/IPAMAdministratorProvider/provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IPAMAdministratorProviderhandlerD22F93F1",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IPAMAdministratorProviderproviderframeworkonEventServiceRole89DD5A78",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IPAMAdministratorProviderproviderframeworkonEventLogRetentionB4BC3F33": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IPAMAdministratorProviderproviderframeworkonEvent71C8849F",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IPAMAdministratorProviderproviderframeworkonEventServiceRole89DD5A78": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IPAMAdministratorProviderproviderframeworkonEventServiceRoleDefaultPolicyF2740871": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IPAMAdministratorProviderhandlerD22F93F1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IPAMAdministratorProviderproviderframeworkonEventServiceRoleDefaultPolicyF2740871",
        "Roles": Array [
          Object {
            "Ref": "IPAMAdministratorProviderproviderframeworkonEventServiceRole89DD5A78",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IPAMAdministratorProviderroleBA494714": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "IPAMAdministratorProviderpolicy661939F1",
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IPAMAdministratoripamAdmin659D863B": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DelegatedAdminAccountId": "123456789012",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "IPAMAdministratorProviderproviderframeworkonEvent71C8849F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "6c0316fef24d0df8a9a705c77052001217d864f49af386539d01df54618cd131.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OrganizationAccountProviderhandlerEAF7C45E": Object {
      "DependsOn": Array [
        "OrganizationAccountProviderroleFD0EE157",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "59b938bd743768890f3eee6f75e77139fc46b73288930e504df3d5830c55db53.zip",
        },
        "Handler": "index.on_event",
        "Role": Object {
          "Fn::GetAtt": Array [
            "OrganizationAccountProviderroleFD0EE157",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "OrganizationAccountProviderpolicy92ABFDF8": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "organizations:ListOrganizationalUnitsForParent",
                "organizations:ListAccountsForParent",
                "organizations:ListRoots",
                "organizations:MoveAccount",
                "organizations:DescribeAccount",
                "organizations:DescribeCreateAccountStatus",
                "organizations:CreateAccount",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "OrganizationAccountProviderproviderframeworkonEventA1FDA928": Object {
      "DependsOn": Array [
        "OrganizationAccountProviderproviderframeworkonEventServiceRoleDefaultPolicy05A6AEB5",
        "OrganizationAccountProviderproviderframeworkonEventServiceRole082F1D31",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "598fb6cff8e638be6d00a6a4d728d795cc8f563ff24122bb1ab518c1530e24d8.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (TestStack/OrganizationAccountProvider/provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "OrganizationAccountProviderhandlerEAF7C45E",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "OrganizationAccountProviderproviderframeworkonEventServiceRole082F1D31",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "OrganizationAccountProviderproviderframeworkonEventLogRetentionB1D63354": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "OrganizationAccountProviderproviderframeworkonEventA1FDA928",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "OrganizationAccountProviderproviderframeworkonEventServiceRole082F1D31": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OrganizationAccountProviderproviderframeworkonEventServiceRoleDefaultPolicy05A6AEB5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "OrganizationAccountProviderhandlerEAF7C45E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "OrganizationAccountProviderproviderframeworkonEventServiceRoleDefaultPolicy05A6AEB5",
        "Roles": Array [
          Object {
            "Ref": "OrganizationAccountProviderproviderframeworkonEventServiceRole082F1D31",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OrganizationAccountProviderroleFD0EE157": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "OrganizationAccountProviderpolicy92ABFDF8",
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OrganizationOUProviderhandler080F4AD3": Object {
      "DependsOn": Array [
        "OrganizationOUProviderroleA45081DC",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "96aeeca4f8cc97ce97ac2bf6ba9bda1dc9ab68e4e964f2944704dfad933ab5b4.zip",
        },
        "Handler": "index.on_event",
        "Role": Object {
          "Fn::GetAtt": Array [
            "OrganizationOUProviderroleA45081DC",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "OrganizationOUProviderpolicyC8E987A8": Object {
      "Properties": Object {
        "Description": "",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "organizations:UpdateOrganizationalUnit",
                "organizations:DeleteOrganizationalUnit",
                "organizations:ListOrganizationalUnitsForParent",
                "organizations:CreateOrganizationalUnit",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "OrganizationOUProviderproviderframeworkonEvent455BD921": Object {
      "DependsOn": Array [
        "OrganizationOUProviderproviderframeworkonEventServiceRoleDefaultPolicy1A8B9C1C",
        "OrganizationOUProviderproviderframeworkonEventServiceRole32FF7533",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "598fb6cff8e638be6d00a6a4d728d795cc8f563ff24122bb1ab518c1530e24d8.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (TestStack/OrganizationOUProvider/provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "OrganizationOUProviderhandler080F4AD3",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "OrganizationOUProviderproviderframeworkonEventServiceRole32FF7533",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "OrganizationOUProviderproviderframeworkonEventLogRetention49235E57": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "OrganizationOUProviderproviderframeworkonEvent455BD921",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "OrganizationOUProviderproviderframeworkonEventServiceRole32FF7533": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OrganizationOUProviderproviderframeworkonEventServiceRoleDefaultPolicy1A8B9C1C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "OrganizationOUProviderhandler080F4AD3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "OrganizationOUProviderproviderframeworkonEventServiceRoleDefaultPolicy1A8B9C1C",
        "Roles": Array [
          Object {
            "Ref": "OrganizationOUProviderproviderframeworkonEventServiceRole32FF7533",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OrganizationOUProviderroleA45081DC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Ref": "OrganizationOUProviderpolicyC8E987A8",
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestAccounttestexamplecomouCFF56022": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "OrganizationAccountProviderproviderframeworkonEventLogRetentionB1D63354",
        "OrganizationAccountProviderproviderframeworkonEventA1FDA928",
        "OrganizationAccountProviderproviderframeworkonEventServiceRoleDefaultPolicy05A6AEB5",
        "OrganizationAccountProviderproviderframeworkonEventServiceRole082F1D31",
        "oudf425b37ou574381B2",
      ],
      "Properties": Object {
        "AllowMove": false,
        "DisableDelete": false,
        "Email": "test@example.com",
        "ImportOnDuplicate": false,
        "Name": "TestAccount",
        "Parent": Object {
          "Ref": "oudf425b37ou574381B2",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "OrganizationAccountProviderproviderframeworkonEventA1FDA928",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ou301416f8ouDD4B1D0E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "OrganizationOUProviderproviderframeworkonEventLogRetention49235E57",
        "OrganizationOUProviderproviderframeworkonEvent455BD921",
        "OrganizationOUProviderproviderframeworkonEventServiceRoleDefaultPolicy1A8B9C1C",
        "OrganizationOUProviderproviderframeworkonEventServiceRole32FF7533",
      ],
      "Properties": Object {
        "AllowRecreateOnUpdate": false,
        "ImportOnDuplicate": false,
        "Name": "TestOU",
        "Parent": "r-a1b2",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "OrganizationOUProviderproviderframeworkonEvent455BD921",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "oudf425b37ou574381B2": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "OrganizationOUProviderproviderframeworkonEventLogRetention49235E57",
        "OrganizationOUProviderproviderframeworkonEvent455BD921",
        "OrganizationOUProviderproviderframeworkonEventServiceRoleDefaultPolicy1A8B9C1C",
        "OrganizationOUProviderproviderframeworkonEventServiceRole32FF7533",
      ],
      "Properties": Object {
        "AllowRecreateOnUpdate": false,
        "ImportOnDuplicate": false,
        "Name": "TestOUChild",
        "Parent": Object {
          "Ref": "ou301416f8ouDD4B1D0E",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "OrganizationOUProviderproviderframeworkonEvent455BD921",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
